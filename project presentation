use ig_clone;

#1# How many times does the average user post.
		
            SELECT AVG(post_count) 
            FROM (SELECT user_id, COUNT(*) AS post_count
            FROM photos
            GROUP BY user_id) as avg_user_post;
            
            
 #2# Find the top 5 most used hashtags.


            SELECT id,tag_name, count(*) as tag_count from tags as t 
            inner join photo_tags as pt on t.id = pt.tag_id
            group by id
            order by 3 desc 
            limit 5;
            

#3# Find users who have liked every single photo on the site.

			      select users.id,username from 
            (select user_id ,count(*)from likes
            group by 1
            having count(*) = (select count(*) from photos)
            order by 2 desc) as a inner join  users on a.user_id = users.id
            order by 1;
	
    
#4# Retrieve a list of users along with their usernames and the rank of their account, 
##  creation,ordered by the creation date in ascending order.     
      

		       select id,username ,rank() over(order by created_at ) as account_creation_rank from users
		       order by  created_at asc;
 
 
 #5# List the comments made on photos with their comment texts, photo URLs,and 
 ##  usernames of users who posted the comments.Include the comment count for each photo
 
	         select comment_text,image_url as photo_URL,username , count(*) as comment_count from comments 
			     inner join photos as p using(user_id)
			     inner join users as u on p.id =u.id
			     group by 1,2,3;
               
          
#6# For each tag, show the tag name and the number of photos associated with that tag. 
##  Rank the tags by the number of photos in descending order
		
      
	          select tag_name,count(*) as no_of_photos,rank() over(order by count(*) desc) as tag_rank
            from tags  inner join photo_tags
            on tags.id = photo_tags.tag_id
            group by 1;
		
          
#7#List the usernames of users who have posted photos along with the count of photos they have posted. 
  ## Rank them by the number of photos in descending order.
   
    
		       select username,count(*)as no_of_photo,rank() over(order by count(*) desc) as rank_no 
           from users 
           inner join photos on users.id= photos.user_id
		       group by 1;


#8# Display the username of each user along with the creation date of their first posted photo 
## and the creation date of their next posted photo.


           select username,min(p.created_at)as first_posted_photo_date,lead(min(p.created_at)) 
           over(partition by user_id order by min(p.created_at)) as next_posted_photo_date
           from users 
           inner join photos as p on users.id= p.user_id
           group by 1;
                      
                      
 ## For each comment, show the comment text, the username of the commenter, 
 ##  and the comment text of the previous comment made on the same photo.
                  
            select comment_text,username,lag(comment_text) over(partition by p.user_id  ) as previous_comment
            from comments as c inner join users as u on c.user_id = u.id
			      inner join photos as p on p.id = c.photo_id;
	
                    
#10# Show the username of each user along with the number of photos they have posted and 
##   the number of photos posted by the user before them and after them, based on the creation date.               

	
			        select username, count(*) as no_of_photos ,count(*)>min(p.created_at) as Before_no,
                                                       count(*)>max(p.created_at) as after_no
			        from users as u left join photos as p
                             on u.id = p.user_id
		        	group by 1;
                   
